# SAST Security Scanning Workflow for Terraform Infrastructure
# Comprehensive security validation with 5-tool SAST stack

name: SAST Security Scan

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install SAST Tools
      run: |
        pip install checkov semgrep
        wget -O tfsec https://github.com/aquasecurity/tfsec/releases/latest/download/tfsec-linux-amd64
        chmod +x tfsec && sudo mv tfsec /usr/local/bin/
        wget -O tflint.zip https://github.com/terraform-linters/tflint/releases/latest/download/tflint_linux_amd64.zip
        unzip tflint.zip && sudo mv tflint /usr/local/bin/

    - name: Run Checkov
      run: |
        checkov -d . --framework terraform --output sarif --output-file-path checkov-results.sarif
        
    - name: Run TFSec
      run: |
        tfsec . --format sarif --out tfsec-results.sarif
        
    - name: Run TFLint
      run: |
        tflint --init
        tflint
        
    - name: Run Semgrep
      uses: semgrep/semgrep-action@v1
      with:
        config: >-
          p/terraform
          p/secrets
          p/security-audit
        generateSarif: "1"
        
    - name: Upload SARIF results to GitHub Security
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: |
          checkov-results.sarif
          tfsec-results.sarif
          semgrep.sarif